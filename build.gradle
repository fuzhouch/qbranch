// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root
// for full license information.

buildscript {
    ext.kotlin_version = '1.1.50'
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.51'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}

apply plugin: 'io.codearte.nexus-staging'

allprojects {
    group = 'net.dummydigit.qbranch'
    version = rootProject.file('version.txt').text.trim()
}

subprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'kotlin'
    apply plugin: 'maven'
    apply plugin: 'signing'

    dependencies {
        compile 'org.jetbrains.kotlin:kotlin-stdlib:1.1.51'
        testCompile 'junit:junit:4.12'
    }

    test {
        testLogging.showStandardStreams = project.hasProperty("testOutput")
    }

    jar {
        manifest {
            attributes("Implementation-Title": "qbranch")
                attributes("Implementation-Version": version)
        }
    }

    compileTestJava {
        options.compilerArgs += ["-Xlint:unchecked"]
    }

    // For publishing to Maven central.
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    if (project.hasProperty('release')) {
        nexusStaging {
            username = ossrhUsername
            password = ossrhPassword
        }

        signing.sign configurations.archives

        uploadArchives {
            repositories.mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'qbranch'
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'An alternative implementation of Microsoft Bond for JVM.'
                    url 'https://github.com/fuzhouch/qbranch'

                    scm {
                        connection 'scm:svn:https://github.com/fuzhouch/qbranch.git'
                        developerConnection 'scm:git:https://github.com/fuzhouch/qbranch.git'
                        url 'https://github.com/fuzhouch/qbranch.git'
                    }

                    licenses {
                        license {
                            name 'MIT License'
                            url 'https://github.com/fuzhouch/qbranch/blob/master/LICENSE'
                        }
                    }

                    developers {
                        developer {
                            id 'fuzhouch'
                            name 'Fuzhou Chen'
                            email 'fuzhouch@gmail.com'
                        }
                    }
                }
            }
        }
    }
}

// REF: http://nemerosa.ghost.io/2015/07/01/publishing-to-the-maven-central-using-gradle/
// Release: ./gradlew ... -Prelease uploadArchives closeAndPromoteRepository
